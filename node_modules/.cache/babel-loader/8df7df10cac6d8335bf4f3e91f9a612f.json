{"ast":null,"code":"/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\nmodule.exports = function (path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n  var len = path.length;\n  if (len <= 1) return path; // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n\n  var prefix = '';\n\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n\n  return prefix + segs.join('/');\n};","map":{"version":3,"names":["module","exports","path","stripTrailing","TypeError","len","length","prefix","ch","slice","segs","split","pop","join"],"sources":["C:/reactnative/TescaroTechAviacaoWeb/node_modules/normalize-path/index.js"],"sourcesContent":["/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,aAAf,EAA8B;EAC7C,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;IAC5B,MAAM,IAAIE,SAAJ,CAAc,8BAAd,CAAN;EACD;;EAED,IAAIF,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,GAA9B,EAAmC,OAAO,GAAP;EAEnC,IAAIG,GAAG,GAAGH,IAAI,CAACI,MAAf;EACA,IAAID,GAAG,IAAI,CAAX,EAAc,OAAOH,IAAP,CAR+B,CAU7C;EACA;EACA;;EACA,IAAIK,MAAM,GAAG,EAAb;;EACA,IAAIF,GAAG,GAAG,CAAN,IAAWH,IAAI,CAAC,CAAD,CAAJ,KAAY,IAA3B,EAAiC;IAC/B,IAAIM,EAAE,GAAGN,IAAI,CAAC,CAAD,CAAb;;IACA,IAAI,CAACM,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,GAAtB,KAA8BN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAc,CAAd,MAAqB,MAAvD,EAA+D;MAC7DP,IAAI,GAAGA,IAAI,CAACO,KAAL,CAAW,CAAX,CAAP;MACAF,MAAM,GAAG,IAAT;IACD;EACF;;EAED,IAAIG,IAAI,GAAGR,IAAI,CAACS,KAAL,CAAW,QAAX,CAAX;;EACA,IAAIR,aAAa,KAAK,KAAlB,IAA2BO,IAAI,CAACA,IAAI,CAACJ,MAAL,GAAc,CAAf,CAAJ,KAA0B,EAAzD,EAA6D;IAC3DI,IAAI,CAACE,GAAL;EACD;;EACD,OAAOL,MAAM,GAAGG,IAAI,CAACG,IAAL,CAAU,GAAV,CAAhB;AACD,CA3BD"},"metadata":{},"sourceType":"script"}