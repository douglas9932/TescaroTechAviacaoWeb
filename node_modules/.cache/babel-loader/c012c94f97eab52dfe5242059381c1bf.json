{"ast":null,"code":"'use strict';\n\nconst fill = require('fill-range');\n\nconst utils = require('./utils');\n\nconst compile = function (ast) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let walk = function (node) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options,\n        wrap: false,\n        toRegex: true\n      });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;","map":{"version":3,"names":["fill","require","utils","compile","ast","options","walk","node","parent","invalidBlock","isInvalidBrace","invalidNode","invalid","escapeInvalid","prefix","output","isOpen","value","isClose","type","prev","nodes","ranges","args","reduce","range","wrap","toRegex","length","child","module","exports"],"sources":["C:/reactnative/TescaroTechAviacaoWeb/node_modules/braces/lib/compile.js"],"sourcesContent":["'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,MAAME,OAAO,GAAG,UAACC,GAAD,EAAuB;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;;EACrC,IAAIC,IAAI,GAAG,UAACC,IAAD,EAAuB;IAAA,IAAhBC,MAAgB,uEAAP,EAAO;IAChC,IAAIC,YAAY,GAAGP,KAAK,CAACQ,cAAN,CAAqBF,MAArB,CAAnB;IACA,IAAIG,WAAW,GAAGJ,IAAI,CAACK,OAAL,KAAiB,IAAjB,IAAyBP,OAAO,CAACQ,aAAR,KAA0B,IAArE;IACA,IAAID,OAAO,GAAGH,YAAY,KAAK,IAAjB,IAAyBE,WAAW,KAAK,IAAvD;IACA,IAAIG,MAAM,GAAGT,OAAO,CAACQ,aAAR,KAA0B,IAA1B,GAAiC,IAAjC,GAAwC,EAArD;IACA,IAAIE,MAAM,GAAG,EAAb;;IAEA,IAAIR,IAAI,CAACS,MAAL,KAAgB,IAApB,EAA0B;MACxB,OAAOF,MAAM,GAAGP,IAAI,CAACU,KAArB;IACD;;IACD,IAAIV,IAAI,CAACW,OAAL,KAAiB,IAArB,EAA2B;MACzB,OAAOJ,MAAM,GAAGP,IAAI,CAACU,KAArB;IACD;;IAED,IAAIV,IAAI,CAACY,IAAL,KAAc,MAAlB,EAA0B;MACxB,OAAOP,OAAO,GAAIE,MAAM,GAAGP,IAAI,CAACU,KAAlB,GAA2B,GAAzC;IACD;;IAED,IAAIV,IAAI,CAACY,IAAL,KAAc,OAAlB,EAA2B;MACzB,OAAOP,OAAO,GAAIE,MAAM,GAAGP,IAAI,CAACU,KAAlB,GAA2B,GAAzC;IACD;;IAED,IAAIV,IAAI,CAACY,IAAL,KAAc,OAAlB,EAA2B;MACzB,OAAOZ,IAAI,CAACa,IAAL,CAAUD,IAAV,KAAmB,OAAnB,GAA6B,EAA7B,GAAmCP,OAAO,GAAGL,IAAI,CAACU,KAAR,GAAgB,GAAjE;IACD;;IAED,IAAIV,IAAI,CAACU,KAAT,EAAgB;MACd,OAAOV,IAAI,CAACU,KAAZ;IACD;;IAED,IAAIV,IAAI,CAACc,KAAL,IAAcd,IAAI,CAACe,MAAL,GAAc,CAAhC,EAAmC;MACjC,IAAIC,IAAI,GAAGrB,KAAK,CAACsB,MAAN,CAAajB,IAAI,CAACc,KAAlB,CAAX;MACA,IAAII,KAAK,GAAGzB,IAAI,CAAC,GAAGuB,IAAJ,EAAU,EAAE,GAAGlB,OAAL;QAAcqB,IAAI,EAAE,KAApB;QAA2BC,OAAO,EAAE;MAApC,CAAV,CAAhB;;MAEA,IAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;QACtB,OAAOL,IAAI,CAACK,MAAL,GAAc,CAAd,IAAmBH,KAAK,CAACG,MAAN,GAAe,CAAlC,GAAuC,IAAGH,KAAM,GAAhD,GAAqDA,KAA5D;MACD;IACF;;IAED,IAAIlB,IAAI,CAACc,KAAT,EAAgB;MACd,KAAK,IAAIQ,KAAT,IAAkBtB,IAAI,CAACc,KAAvB,EAA8B;QAC5BN,MAAM,IAAIT,IAAI,CAACuB,KAAD,EAAQtB,IAAR,CAAd;MACD;IACF;;IACD,OAAOQ,MAAP;EACD,CA7CD;;EA+CA,OAAOT,IAAI,CAACF,GAAD,CAAX;AACD,CAjDD;;AAmDA0B,MAAM,CAACC,OAAP,GAAiB5B,OAAjB"},"metadata":{},"sourceType":"script"}